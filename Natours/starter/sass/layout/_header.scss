.header {
	/* 
	the height of the element is 85% of the windowheight 
	*/
	height: 85vh;
	/* 
	the gradient will go from the left to right bottom corner 
	*/
	background-image: linear-gradient(
		to right bottom, 
		rgba($color-primary-light, 0.8), 
		rgba($color-primary-dark, 0.8)), 
	url(../img/hero-small.jpg);
	background-size: cover;
	/* 
	the top of the image never gets croped if we change the viewport size 
	*/
	background-position: top;
	/* 
	it let us to define a poligon in wich our image is still visible, 
	you define the corners going from left to right 
	counting how much you wanna the poligon to go on the x or the y cordinates
	*/
	position: relative;

	// always add some value to the property
	@supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
		-webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
		clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);	
		height: 95vh;
	}
	
	/* 
	when the resolution is higher than 192dpi 
	and whenever the width is larger than 600px this code will apply

	safari DO NOT supports min-resolution that is why we use -webkit-min-device-pixel-ratio
	*/
	@media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
		   only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), 
		   only screen and (min-width: 125em){
		background-image: linear-gradient(
			to right bottom, 
			rgba($color-primary-light, 0.8), 
			rgba($color-primary-dark, 0.8)), 
		url(../img/hero.jpg);
	}


	@include respond(phone) {
		-webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
		clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
	}

	&__logo-box {
		position: absolute;
		/* 
		to use this we have to set the parent element's position to relative 
		so the top and left properties will now where top count the 40px from
		*/
		top: 4rem;
		left: 4rem;	
	}

	&__logo {
		height: 3.5rem;	
	}

	&__text-box {
		@include center-vertical-horizontal;
		/* 
		translate values are x and y, 
		these values are no longer in relation to the parent element but the element itself
		so the element will be shifterd half of the width to the left side and the same for the height
		*/
		// transform: translate(-50%, -50%);
		text-align: center;	
	}
}
