.story {
	width: 75%;
	margin: 0 auto;
	box-shadow: 0 3rem 6rem rgba($color-black, .1);
	background-color: rgba($color-white, .6);
	border-radius: 3px;
	padding: 6rem;
	padding-left: 9rem;
	font-size: $default-font-size;
	transform: skewX(-12deg);
	
	// 2 transform property can not be applied on one element at the same time so we have to make it separetley
	// & > * {
	// 	transform: skewX(12deg);
	// }

	@include respond(tab-port) {
		width: 100%;
		padding: 4rem;
		padding-left: 7rem;
	}

	@include respond(phone) {
		transform: skewX(0);
	}

	&__shape {
		width: 15rem;
		height: 15rem;
		float: left;
		transform: translateX(-3rem) skewX(12deg);
		position: relative;
		overflow: hidden;
        border-radius: 50%;
		// shape-outside property defines where the content floats around the element
		//first define the radius of the element, 50% means it is the 50% of the height and width
		// in order to work the element must be floated and defined the dimensions like width and height
		-webkit-shape-outside: circle(50% at 50% 50%);
		shape-outside: circle(50% at 50% 50%);
		// -webkit-clip-path: circle(50% at 50% 50%);
		// clip-path: circle(50% at 50% 50%);

		@include respond(phone) {
			transform: translateX(-3rem) skewX(0);
		}
	}

	// flexible images for responsive webdesign always need a width
	&__image {
		// the parent shape of this image has a defined dimension that is why 100% works well here
		height: 100%;
		backface-visibility: hidden;
		transform: translateX(-4rem) scale(1.4);
		transition: transform .5s;
	}

	&__text {
		transform: skewX(12deg);

		@include respond(phone) {
			transform: skewX(0);
		}
	}

	&__caption {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, 20%);
		color: $color-white;
		text-transform: uppercase;
		font-size: 1.7rem;
		text-align: center;
		opacity: 0;
		// need transition in order to make the animation work
		transition: all .5s;
		// fixing glitch of transform property
		backface-visibility: hidden;
	}

	&:hover &__caption {
		opacity: 1;
		transform: translate(-50%, -50%);
	}

	&:hover &__image {
		transform: translateX(-4rem) scale(1);
		filter: blur(3px) brightness(80%);
	}
}